{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.string.sub.js","webpack:///./src/components/spacedisplay.js","webpack:///./src/pages/ai.js"],"names":["$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","this","SpaceDisplay","props","canvasRef","React","createRef","width","centerX","height","centerY","antiMag","scale","Math","pow","context","undefined","componentDidMount","canvas","current","getContext","renderCanvas","addEventListener","e","preventDefault","deltaY","componentDidUpdate","prevProps","cleanCanvas","fillBackground","circles","forEach","circle","drawCircle","position","radius","focusedOnCircle","fuelPercentage","drawFuel","fillStyle","fillRect","resetContext","percentage","lineWidth","strokeRect","center","offset","beginPath","arc","PI","stroke","strokeStyle","setLineDash","clearRect","render","ref","style","border","Component","Ai","a","velocity","mass","b","c","fuel","magicAccelerationMagnitude","timestep","sim","GravitySimulator","DefaultMathFunction","addBody","setInterval","stepSimulation","bind","updateTime","detectCollision","forceUpdate","mf","bodies","GRAVITY_CONSTANT","body","push","removeBody","index","indexOf","splice","calcAccelFromPos","G","M","R1","R2","dR","sub","RDiffMag","sqrt","lengthSquared","nullVector","D","mulScalar","calcAccelForObject","R","accel","magicAccelerationDirection","magicAcceleration","normalize","add","otherBody","multiAdd","r","i","arguments","dt","V","A","halfDiffT","KaV","KaA","KbR","KbV","KbA","KcR","KcV","KcA","KdR","KdV","KdA","vfV","vfA","some","dVector","dSquared","sumOfRadii","s","dot"],"mappings":"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","file":"component---src-pages-ai-js-fa6d17485067efbb3d12.js","sourcesContent":["var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n","import React from \"react\";\n\nclass SpaceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.width = 1300;\n    this.centerX = this.width / 2;\n    this.height = 600;\n    this.centerY = this.height / 2;\n    this.antiMag = 1.5;\n    this.scale = 500.0 / Math.pow(this.antiMag, 6);\n    this.context = undefined;\n  }\n\n  componentDidMount() {\n    this.canvas = this.canvasRef.current;\n    this.context = this.canvas.getContext(\"2d\");\n    this.renderCanvas();\n\n    this.canvas.addEventListener('wheel', e => {\n      e.preventDefault();\n      this.antiMag += e.deltaY * 0.02;\n      if (this.antiMag < 1.0) this.antiMag = 1.0;\n      this.scale = 500.0 / Math.pow(this.antiMag, 6);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    this.canvas = this.canvasRef.current;\n    this.context = this.canvas.getContext(\"2d\");\n    this.renderCanvas();\n  }\n\n  renderCanvas() {\n    this.cleanCanvas();\n    this.fillBackground();\n    if (this.props.circles) {\n      this.props.circles.forEach((circle) => {\n        this.drawCircle(circle.position, circle.radius, this.props.focusedOnCircle.position);\n      });\n    }\n    if (this.props.fuelPercentage) {\n      this.drawFuel(this.props.fuelPercentage);\n    }\n  }\n\n  fillBackground() {\n    this.context.fillStyle = '#16122b';\n    this.context.fillRect(0, 0, this.width, this.height);\n    this.resetContext();\n  }\n\n  drawFuel(percentage) {\n    this.context.lineWidth = 3.0;\n    this.context.strokeRect(50, 50, 20, 100);\n    this.context.fillRect(50, 150, 20, -percentage);\n    this.resetContext();\n  }\n\n  drawCircle(center, radius, offset) {\n    this.context.beginPath();\n    this.context.arc(((center[0] - offset[0]) * this.scale) + this.centerX, (-(center[1] - offset[1]) * this.scale) + this.centerY, radius * this.scale, 0, 2 * Math.PI);\n    this.context.stroke();\n  }\n\n  resetContext() {\n    this.context.lineWidth = 2.0;\n    this.context.strokeStyle = 'grey';\n    this.context.fillStyle = 'grey';\n    this.context.setLineDash([]);\n  }\n\n  cleanCanvas() {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  render() {\n    return (\n      <canvas ref={this.canvasRef} height={this.height} width={this.width} style={{ border: `solid` }}>\n      </canvas>\n    )\n  }\n}\n\nexport default SpaceDisplay;\n","import React from \"react\"\nimport SpaceDisplay from \"../components/spacedisplay\"\nimport NeuralNetwork from \"../classes/neural-network\"\n\nclass Ai extends React.Component {\n  constructor(props) {\n    super(props);\n    this.a = {\n      position: [1000.0, 1000.0],\n      velocity: [6.0, -6.0],\n      radius: Math.pow(1000000.0 * 5.0, 1/3),\n      mass: 1000.0\n    }\n    this.b = {\n      position: [0.0, 0.0],\n      velocity: [0.0, 0.0],\n      radius: Math.pow(10000000.0 * 5.0, 1/3),\n      mass: 100000.0\n    }\n    this.c = {\n      position: [300.0, 300.0],\n      velocity: [11.0, -11.0],\n      radius: Math.pow(0.001 * 5.0, 1/3),\n      mass: 0.001,\n      fuel: 100.0,\n      magicAccelerationMagnitude: 0.1\n    }\n    this.timestep = 0.5;\n    this.sim = new GravitySimulator(new DefaultMathFunction());\n    this.sim.addBody(this.a);\n    this.sim.addBody(this.b);\n    this.sim.addBody(this.c);\n    //const a = new NeuralNetwork([1, 3, 3, 1]);\n    //for (let i = 0; i < 2000; i++) {\n      //const expectation = Math.random();\n      //const out = a.process([expectation * 100.0])[0];\n      //console.log(\"expectation\");\n      //console.log(expectation);\n      //console.log(\"out\");\n      //console.log(out);\n      //a.learn(0.1, [out - expectation]);\n      ////console.log(\"weights\");\n      ////console.log(a.layers[0].weights()[0][0]);\n      ////console.log(a.layers[1].weights()[0][0]);\n      ////console.log(\"biases\");\n      ////console.log(a.layers[0].neurons[0].bias);\n      ////console.log(a.layers[1].neurons[0].bias);\n    //}\n  }\n\n  componentDidMount() {\n    setInterval(this.stepSimulation.bind(this), 16);\n  }\n\n  stepSimulation() {\n    this.sim.updateTime(this.timestep);\n    this.sim.detectCollision(this.c);\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <SpaceDisplay circles={[this.a, this.b, this.c]} focusedOnCircle={this.c} fuelPercentage={this.c.fuel} />\n    )\n  }\n}\n\nexport default Ai\n\nclass GravitySimulator {\n\n  constructor(mf) {\n    this.mf = mf;\n    this.bodies = [];\n    this.GRAVITY_CONSTANT = 1; // Nm2/kg2\n  }\n\n  addBody(body) {\n    this.bodies.push(body);\n  };\t\n\n  removeBody(body) {\n    const index = this.bodies.indexOf(body);\n    this.bodies.splice(index, 1);\n  };\n\n  calcAccelFromPos(G, M, R1, R2) {\n    const dR = this.mf.sub(R1, R2);\n    const RDiffMag = Math.sqrt(this.mf.lengthSquared(dR));\n    if(RDiffMag === 0.0) {\n      return this.mf.nullVector();\n    }\n    const D = G * M / (RDiffMag * RDiffMag * RDiffMag);\n    return this.mf.mulScalar(dR, D);\n  };\n\n  calcAccelForObject(body, G, R) {\n    let accel = this.mf.nullVector();\n\n    // add acceleration from booster\n    if (body.magicAccelerationDirection && body.fuel > 0.0) {\n      const magicAcceleration = this.mf.mulScalar(this.mf.normalize(body.magicAccelerationDirection), body.magicAccelerationMagnitude);\n      accel = this.mf.add(accel, magicAcceleration);\n    }\n\n    this.bodies.forEach((otherBody) => {\n      if(otherBody === body)\n        return;\n      accel = this.mf.add(accel, this.calcAccelFromPos(G, otherBody.mass, otherBody.position, R));\n    });\n    return accel;\n  };\n\n  multiAdd() {\n    let r = this.mf.nullVector();\n    for(let i=0;i<arguments.length;i++) {\n      r = this.mf.add(r, arguments[i]);\n    }\n    return r;\n  };\n\n  updateTime(dt) {\n    this.bodies.forEach((otherBody) => {\n      // Integrate via Runge-Kutta...\n      let R = otherBody.position;\n      let V = otherBody.velocity;\n      const A = this.calcAccelForObject(otherBody, this.GRAVITY_CONSTANT, R);\n\n      const halfDiffT = 0.5 * dt;\n\n      const KaV = V;\n      const KaA = A;\n\n      const KbR = this.mf.add(R, this.mf.mulScalar(KaV, halfDiffT));\n      const KbV = this.mf.add(V, this.mf.mulScalar(KaA, halfDiffT));\n      const KbA = this.calcAccelForObject(otherBody, this.GRAVITY_CONSTANT, KbR);\n\n      const KcR = this.mf.add(R, this.mf.mulScalar(KbV, halfDiffT));\n      const KcV = this.mf.add(V, this.mf.mulScalar(KbA, halfDiffT));\n      const KcA = this.calcAccelForObject(otherBody, this.GRAVITY_CONSTANT, KcR);\n\n      const KdR = this.mf.add(R, this.mf.mulScalar(KcV, dt));\n      const KdV = this.mf.add(V, this.mf.mulScalar(KcA, dt));\n      const KdA = this.calcAccelForObject(otherBody, this.GRAVITY_CONSTANT, KdR);\n\n      const vfV = this.mf.mulScalar(this.multiAdd(KaV, this.mf.mulScalar(KbV, 2.0), this.mf.mulScalar(KcV, 2.0), KdV), 1.0/6.0);\n      const vfA = this.mf.mulScalar(this.multiAdd(KaA, this.mf.mulScalar(KbA, 2.0), this.mf.mulScalar(KcA, 2.0), KdA), 1.0/6.0);\n\n      R = this.mf.add(R, this.mf.mulScalar(vfV, dt));\n      V = this.mf.add(V, this.mf.mulScalar(vfA, dt));\n\n      otherBody.position = R;\n      otherBody.velocity = V;\n    });\n  };\n\n  detectCollision(body) {\n    // if exists colliding body ∈ bodies\n    return this.bodies.some((otherBody) => {\n      if(otherBody === body) {\n        return false;\n      }\n\n      // check if d^2 > r^3 + R^3 -> d > r + R -> not colliding\n      const dVector = this.mf.sub(otherBody.position, body.position);\n      const dSquared = this.mf.lengthSquared(dVector);\n      const sumOfRadiiCubed = body.mass + otherBody.mass;\n      if (dSquared > sumOfRadiiCubed) return false;\n\n      // check if d^2 < r + R -> d < r + R -> colliding\n      const sumOfRadii = body.radius + otherBody.radius;\n      if (dSquared < sumOfRadii) return true;\n\n      // check if d < r + R -> colliding\n      const d = Math.pow(dSquared, 1/2);\n      if (d < sumOfRadii) return true;\n\n      return false;\n    });\n  }\n}\n\nclass DefaultMathFunction {\n  nullVector() {\n    return [0,0];\n  }\n\n  add(a, b) {\n    return [\n      a[0] + b[0],\n      a[1] + b[1]\n    ];\n  }\n\n  sub(a, b) {\n    return [\n      a[0] - b[0],\n      a[1] - b[1]\n    ];\n  }\n\n  mulScalar(a, s) {\n    return [\n      a[0] * s,\n      a[1] * s\n    ];\n  }\n\n  dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  lengthSquared(a) {\n    return a[0]*a[0] + a[1]*a[1];\n  }\n\n  length(a) {\n    return Math.pow(this.lengthSquared(a), 1/2);\n  }\n\n  normalize(a) {\n    return this.mulScalar(a, 1 / this.length(a));\n  }\n}\n"],"sourceRoot":""}